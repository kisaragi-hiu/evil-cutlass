* evil-cutlass

Override delete operations to not affect the clipboard / kill ring. Evil port of [[https://github.com/svermeulen/vim-cutlass][vim-cutlass]].

** Usage

Turn on the global minor mode, =evil-cutlass-mode=. Now every command that uses =evil-delete= except =evil-visual-paste= would use the the blackhole register by default, making them delete instead of cut. This includes:

- =c= and =cc= (evil-change)
- =C= (evil-change-line)
- =S= (evil-change-whole-line)
- =s= (evil-substitute)
- =d= and =dd= (evil-delete)
- =X= (evil-delete-backward-char)
- =x= (evil-delete-char)
- =D= (evil-delete-line)
- =C-u= (evil-delete-whole-line)

=evil-visual-paste=, ie. pasting text over selected text in visual state, also modifies the clipboard. Evil already provides =evil-kill-on-visual-paste= for toggling this.

="= (evil-use-register) still works while evil-cutlass is active. Note that because Evil also copies into the clipboard / kill ring when copying into any register that's not the blackhole register, this will then clobber the clipboard just as usual.

To cut text, either bind and use =evil-cutlass-cut= and =evil-cutlass-cut-line=, or perhaps just turn off the mode. There are unfortunately too many evil-derived functions to create an alternative keybinding for all of them at once.

** Setup

#+begin_src emacs-lisp
(straight-use-package '(evil-cutlass :host github :repo "kisaragi-hiu/evil-cutlass"))

;; Turn on the mode globally by default:
(evil-cutlass-mode)

;; Or bind a key to toggle the minor mode:
(general-define-key
 :prefix "SPC"
 :states '(normal)
 "tc" #'evil-cutlass-mode)

;; Maybe bind keys for cutting:
(evil-define-key* 'normal evil-cutlass-mode-map "x" #'evil-cutlass-cut)
(evil-define-key* 'normal evil-cutlass-mode-map "X" #'evil-cutlass-cut-line)
#+end_src

** todos
- also make backward-kill-word (C-DEL) not clobber the clipboard
** Compared to vim-cutlass and [[https://github.com/nelstrom/vim-cutlass][the original proposal]]

- vim-cutlass does not support specifying registers for the overriden commands.
- vim-cutlass does not address evil-visual-paste; neither do I as this is already addressed by Evil itself.

** Acknowledgments

- https://github.com/nelstrom/vim-cutlass :: original proposal
- https://github.com/svermeulen/vim-cutlass :: original vim implementation
- https://github.com/edkolev/evil-goggles :: I copied how it advises evil commands
